{"version":3,"sources":["Weather-img.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","k","useState","apiData","setApiData","getState","setGetState","state","setState","apiURL","useEffect","fetch","then","res","json","data","console","log","className","src","Weather","alt","htmlFor","type","id","onChange","event","target","value","placeholder","onClick","main","weather","icon","name","sys","country","temp","toFixed","wind","speed","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,G,MAAA,IAA0B,yC,OCmF1BA,MA/Ef,WAEE,IAwB2BC,EAxB3B,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,aAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAM,4DAAwDF,EAAxD,2CAyBV,OArBFG,qBAAU,WACRC,MAAMF,GACLG,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZX,EAAWW,QAEZ,CAACN,IAeA,sBAAKS,UAAU,MAAf,UACE,wBAAQA,UAAU,oDAAlB,SACE,qDAEF,sBAAKA,UAAU,kBAAf,UAEE,qBAAKC,IAAKC,EAASF,UAAU,WAAWG,IAAI,QAE5C,sBAAKH,UAAU,gFAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOI,QAAQ,gBAAgBJ,UAAU,uBAAzC,+BACA,uBAAOK,KAAK,OAAOC,GAAG,gBAAgBN,UAAU,gBAAgBO,SAxB7D,SAACC,GACdpB,EAAYoB,EAAMC,OAAOC,QAuBmEA,MAAOvB,EAAUwB,YAAY,WAC/G,mBAAGC,QArBA,WACbtB,EAASH,IAoBqBa,UAAU,mCAEhC,qBAAKA,UAAU,oBAAf,SACGf,EAAQ4B,KACP,sBAAKb,UAAU,cAAf,UAEE,qBAAKC,IAAG,0CAAqChB,EAAQ6B,QAAQ,GAAGC,KAAxD,QAAoEZ,IAAI,sBAAsBH,UAAU,iBAChH,8BAAI,IAAI,iCAASf,EAAQ6B,QAAQ,GAAGD,OAApC,OAEA,oBAAGb,UAAU,sBAAb,UAAmC,mBAAGA,UAAU,0BAA6B,IAC3E,iCAASf,EAAQ+B,UACnB,mBAAGhB,UAAU,yBAAb,SAAuCf,EAAQgC,IAAIC,UAEnD,sBAAKlB,UAAU,mBAAf,UACE,oBAAGA,UAAU,yBAAb,WA/BSjB,EA+BgDE,EAAQ4B,KAAKM,MA9B9EpC,EAAI,QAAQqC,QAAQ,IA8BZ,WACA,oBAAGpB,UAAU,iBAAb,UAA8B,mBAAGA,UAAU,gBAAmBf,EAAQoC,KAAKC,MAA3E,iBAIH,oDAIT,wBAAQtB,UAAU,SAAlB,SACE,8CAAiB,IAAI,mBAAGuB,KAAK,2CAA2Cd,OAAO,OAA1D,qBAA6E,IAAlG,uBC3DKe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c2d80d25.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Weather-img.e2d00873.jpg\";","import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport Weather from './Weather-img.jpg';\n\nfunction App(){\n  \n  const [apiData, setApiData] = useState({})\n  const [getState, setGetState] = useState('')\n  const [state, setState] = useState('tamilnadu')\n  const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${state}&appid=c3c16cd01bfa7473bb8a03d996fc2933`; \n  \n\n\n  useEffect(() => {\n    fetch(apiURL)\n    .then((res)=>res.json())\n    .then((data)=>{\n      console.log(data)\n      setApiData(data);\n    })\n  }, [apiURL]);\n\n  const search = (event)=>{\n    setGetState(event.target.value)\n  }\n\n  const submit = ()=>{\n    setState(getState)\n  }\n\n  const kelvinToFarenheit = (k) => {\n    return (k - 273.15).toFixed(2);\n  };\n  \n    return (\n      <div className=\"App\">\n        <header className=\"d-flex  justify-content-center align-items-center\">\n          <h2>React Weather App</h2>\n        </header>\n        <div className=\"card text-white\">\n\n          <img src={Weather} className=\"card-img\" alt=\"...\"/>\n\n          <div className=\"card-img-overlay d-flex flex-column justify-content-center align-items-center\">\n            <div className=\"d-flex form-item\">\n              <label htmlFor=\"location-name\" className=\"col-form-label label\"> Enter Location :</label>\n              <input type=\"text\" id=\"location-name\" className=\"search d-flex\" onChange={search} value={getState} placeholder=\"Search\"/>\n              <i onClick={submit} className=\"fas fa-search bg-secondary \"></i>\n            </div>\n            <div className=\"card-body mx-auto\">\n              {apiData.main ? (\n                <div className=\"text-center\">\n\n                  <img src={`http://openweathermap.org/img/w/${apiData.weather[0].icon}.png`} alt=\"weather status icon\" className=\"weather-icon\"/>\n                  <p>{' '}<strong>{apiData.weather[0].main}</strong> </p>\n\n                  <p className=\"card-text city-name\"><i className=\"fas fa-map-marker-alt\"></i>{' '}\n                    <strong>{apiData.name}</strong></p>\n                  <p className=\"card-text country-name\">{apiData.sys.country}</p>\n      \n                  <div className=\"col-md-6 mx-auto\">\n                    <p className=\"card-text temperature \">{kelvinToFarenheit(apiData.main.temp)}Â°c</p>\n                    <p className=\"card-text wind\"><i className=\"fas fa-wind\"></i>{apiData.wind.speed}km/hr</p>\n                  </div>\n\n                </div>\n              ):(<h3>Loading...</h3>)}\n            </div>\n          </div>\n        </div>\n        <footer className=\"footer\">\n          <code>Created by{' '}<a href=\"https://www.github.com/Haritha101-19.com\" target=\"none\">Haritha</a>{' '}using React</code>\n        </footer>\n      </div>\n    )\n\n\n};\n\n\n  \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}